{"version":3,"file":"polyfills.87419580e17bf21f.js","mappings":"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","names":["MissingTranslationError","Error","constructor","parsedMessage","super","describeMessage","this","type","$localize$1","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","globalThis","global","window","self","WorkerGlobalScope","ɵ_global","ɵ$localize","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","static","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","isPropertyWritable","propertyDesc","writable","set","isWebWorker","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","values","Symbol","iterator","promises","finished","errors","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_a","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/localize/fesm2020/localize.mjs","./node_modules/@angular/localize/fesm2020/init.mjs","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * @license Angular v15.1.3\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * Represents a big integer using a buffer of its individual digits, with the least significant\n * digit stored at the beginning of the array (little endian).\n *\n * For performance reasons, each instance is mutable. The addition operation can be done in-place\n * to reduce memory pressure of allocation for the digits array.\n */\nclass BigInteger {\n    static zero() {\n        return new BigInteger([0]);\n    }\n    static one() {\n        return new BigInteger([1]);\n    }\n    /**\n     * Creates a big integer using its individual digits in little endian storage.\n     */\n    constructor(digits) {\n        this.digits = digits;\n    }\n    /**\n     * Creates a clone of this instance.\n     */\n    clone() {\n        return new BigInteger(this.digits.slice());\n    }\n    /**\n     * Returns a new big integer with the sum of `this` and `other` as its value. This does not mutate\n     * `this` but instead returns a new instance, unlike `addToSelf`.\n     */\n    add(other) {\n        const result = this.clone();\n        result.addToSelf(other);\n        return result;\n    }\n    /**\n     * Adds `other` to the instance itself, thereby mutating its value.\n     */\n    addToSelf(other) {\n        const maxNrOfDigits = Math.max(this.digits.length, other.digits.length);\n        let carry = 0;\n        for (let i = 0; i < maxNrOfDigits; i++) {\n            let digitSum = carry;\n            if (i < this.digits.length) {\n                digitSum += this.digits[i];\n            }\n            if (i < other.digits.length) {\n                digitSum += other.digits[i];\n            }\n            if (digitSum >= 10) {\n                this.digits[i] = digitSum - 10;\n                carry = 1;\n            }\n            else {\n                this.digits[i] = digitSum;\n                carry = 0;\n            }\n        }\n        // Apply a remaining carry if needed.\n        if (carry > 0) {\n            this.digits[maxNrOfDigits] = 1;\n        }\n    }\n    /**\n     * Builds the decimal string representation of the big integer. As this is stored in\n     * little endian, the digits are concatenated in reverse order.\n     */\n    toString() {\n        let res = '';\n        for (let i = this.digits.length - 1; i >= 0; i--) {\n            res += this.digits[i];\n        }\n        return res;\n    }\n}\n/**\n * Represents a big integer which is optimized for multiplication operations, as its power-of-twos\n * are memoized. See `multiplyBy()` for details on the multiplication algorithm.\n */\nclass BigIntForMultiplication {\n    constructor(value) {\n        this.powerOfTwos = [value];\n    }\n    /**\n     * Returns the big integer itself.\n     */\n    getValue() {\n        return this.powerOfTwos[0];\n    }\n    /**\n     * Computes the value for `num * b`, where `num` is a JS number and `b` is a big integer. The\n     * value for `b` is represented by a storage model that is optimized for this computation.\n     *\n     * This operation is implemented in N(log2(num)) by continuous halving of the number, where the\n     * least-significant bit (LSB) is tested in each iteration. If the bit is set, the bit's index is\n     * used as exponent into the power-of-two multiplication of `b`.\n     *\n     * As an example, consider the multiplication num=42, b=1337. In binary 42 is 0b00101010 and the\n     * algorithm unrolls into the following iterations:\n     *\n     *  Iteration | num        | LSB  | b * 2^iter | Add? | product\n     * -----------|------------|------|------------|------|--------\n     *  0         | 0b00101010 | 0    | 1337       | No   | 0\n     *  1         | 0b00010101 | 1    | 2674       | Yes  | 2674\n     *  2         | 0b00001010 | 0    | 5348       | No   | 2674\n     *  3         | 0b00000101 | 1    | 10696      | Yes  | 13370\n     *  4         | 0b00000010 | 0    | 21392      | No   | 13370\n     *  5         | 0b00000001 | 1    | 42784      | Yes  | 56154\n     *  6         | 0b00000000 | 0    | 85568      | No   | 56154\n     *\n     * The computed product of 56154 is indeed the correct result.\n     *\n     * The `BigIntForMultiplication` representation for a big integer provides memoized access to the\n     * power-of-two values to reduce the workload in computing those values.\n     */\n    multiplyBy(num) {\n        const product = BigInteger.zero();\n        this.multiplyByAndAddTo(num, product);\n        return product;\n    }\n    /**\n     * See `multiplyBy()` for details. This function allows for the computed product to be added\n     * directly to the provided result big integer.\n     */\n    multiplyByAndAddTo(num, result) {\n        for (let exponent = 0; num !== 0; num = num >>> 1, exponent++) {\n            if (num & 1) {\n                const value = this.getMultipliedByPowerOfTwo(exponent);\n                result.addToSelf(value);\n            }\n        }\n    }\n    /**\n     * Computes and memoizes the big integer value for `this.number * 2^exponent`.\n     */\n    getMultipliedByPowerOfTwo(exponent) {\n        // Compute the powers up until the requested exponent, where each value is computed from its\n        // predecessor. This is simple as `this.number * 2^(exponent - 1)` only has to be doubled (i.e.\n        // added to itself) to reach `this.number * 2^exponent`.\n        for (let i = this.powerOfTwos.length; i <= exponent; i++) {\n            const previousPower = this.powerOfTwos[i - 1];\n            this.powerOfTwos[i] = previousPower.add(previousPower);\n        }\n        return this.powerOfTwos[exponent];\n    }\n}\n/**\n * Represents an exponentiation operation for the provided base, of which exponents are computed and\n * memoized. The results are represented by a `BigIntForMultiplication` which is tailored for\n * multiplication operations by memoizing the power-of-twos. This effectively results in a matrix\n * representation that is lazily computed upon request.\n */\nclass BigIntExponentiation {\n    constructor(base) {\n        this.base = base;\n        this.exponents = [new BigIntForMultiplication(BigInteger.one())];\n    }\n    /**\n     * Compute the value for `this.base^exponent`, resulting in a big integer that is optimized for\n     * further multiplication operations.\n     */\n    toThePowerOf(exponent) {\n        // Compute the results up until the requested exponent, where every value is computed from its\n        // predecessor. This is because `this.base^(exponent - 1)` only has to be multiplied by `base`\n        // to reach `this.base^exponent`.\n        for (let i = this.exponents.length; i <= exponent; i++) {\n            const value = this.exponents[i - 1].multiplyBy(this.base);\n            this.exponents[i] = new BigIntForMultiplication(value);\n        }\n        return this.exponents[exponent];\n    }\n}\n\n/**\n * A lazily created TextEncoder instance for converting strings into UTF-8 bytes\n */\nlet textEncoder;\n/**\n * Return the message id or compute it using the XLIFF1 digest.\n */\nfunction digest(message) {\n    return message.id || computeDigest(message);\n}\n/**\n * Compute the message id using the XLIFF1 digest.\n */\nfunction computeDigest(message) {\n    return sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * Return the message id or compute it using the XLIFF2/XMB/$localize digest.\n */\nfunction decimalDigest(message) {\n    return message.id || computeDecimalDigest(message);\n}\n/**\n * Compute the message id using the XLIFF2/XMB/$localize digest.\n */\nfunction computeDecimalDigest(message) {\n    const visitor = new _SerializerIgnoreIcuExpVisitor();\n    const parts = message.nodes.map(a => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor {\n    visitText(text, context) {\n        return text.value;\n    }\n    visitContainer(container, context) {\n        return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n    }\n    visitIcu(icu, context) {\n        const strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid ?\n            `<ph tag name=\"${ph.startName}\"/>` :\n            `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n}\nconst serializerVisitor = new _SerializerVisitor();\nfunction serializeNodes(nodes) {\n    return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n    visitIcu(icu, context) {\n        let strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nfunction sha1(str) {\n    textEncoder ?? (textEncoder = new TextEncoder());\n    const utf8 = [...textEncoder.encode(str)];\n    const words32 = bytesToWords32(utf8, Endian.Big);\n    const len = utf8.length * 8;\n    const w = new Uint32Array(80);\n    let a = 0x67452301, b = 0xefcdab89, c = 0x98badcfe, d = 0x10325476, e = 0xc3d2e1f0;\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (let i = 0; i < words32.length; i += 16) {\n        const h0 = a, h1 = b, h2 = c, h3 = d, h4 = e;\n        for (let j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const fkVal = fk(j, b, c, d);\n            const f = fkVal[0];\n            const k = fkVal[1];\n            const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            e = d;\n            d = c;\n            c = rol32(b, 30);\n            b = a;\n            a = temp;\n        }\n        a = add32(a, h0);\n        b = add32(b, h1);\n        c = add32(c, h2);\n        d = add32(d, h3);\n        e = add32(e, h4);\n    }\n    // Convert the output parts to a 160-bit hexadecimal string\n    return toHexU32(a) + toHexU32(b) + toHexU32(c) + toHexU32(d) + toHexU32(e);\n}\n/**\n * Convert and format a number as a string representing a 32-bit unsigned hexadecimal number.\n * @param value The value to format as a string.\n * @returns A hexadecimal string representing the value.\n */\nfunction toHexU32(value) {\n    // unsigned right shift of zero ensures an unsigned 32-bit number\n    return (value >>> 0).toString(16).padStart(8, '0');\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n    textEncoder ?? (textEncoder = new TextEncoder());\n    const utf8 = textEncoder.encode(str);\n    const view = new DataView(utf8.buffer, utf8.byteOffset, utf8.byteLength);\n    let hi = hash32(view, utf8.length, 0);\n    let lo = hash32(view, utf8.length, 102072);\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nfunction computeMsgId(msg, meaning = '') {\n    let msgFingerprint = fingerprint(msg);\n    if (meaning) {\n        const meaningFingerprint = fingerprint(meaning);\n        msgFingerprint = add64(rol64(msgFingerprint, 1), meaningFingerprint);\n    }\n    const hi = msgFingerprint[0];\n    const lo = msgFingerprint[1];\n    return wordsToDecimalString(hi & 0x7fffffff, lo);\n}\nfunction hash32(view, length, c) {\n    let a = 0x9e3779b9, b = 0x9e3779b9;\n    let index = 0;\n    const end = length - 12;\n    for (; index <= end; index += 12) {\n        a += view.getUint32(index, true);\n        b += view.getUint32(index + 4, true);\n        c += view.getUint32(index + 8, true);\n        const res = mix(a, b, c);\n        a = res[0], b = res[1], c = res[2];\n    }\n    const remainder = length - index;\n    // the first byte of c is reserved for the length\n    c += length;\n    if (remainder >= 4) {\n        a += view.getUint32(index, true);\n        index += 4;\n        if (remainder >= 8) {\n            b += view.getUint32(index, true);\n            index += 4;\n            // Partial 32-bit word for c\n            if (remainder >= 9) {\n                c += view.getUint8(index++) << 8;\n            }\n            if (remainder >= 10) {\n                c += view.getUint8(index++) << 16;\n            }\n            if (remainder === 11) {\n                c += view.getUint8(index++) << 24;\n            }\n        }\n        else {\n            // Partial 32-bit word for b\n            if (remainder >= 5) {\n                b += view.getUint8(index++);\n            }\n            if (remainder >= 6) {\n                b += view.getUint8(index++) << 8;\n            }\n            if (remainder === 7) {\n                b += view.getUint8(index++) << 16;\n            }\n        }\n    }\n    else {\n        // Partial 32-bit word for a\n        if (remainder >= 1) {\n            a += view.getUint8(index++);\n        }\n        if (remainder >= 2) {\n            a += view.getUint8(index++) << 8;\n        }\n        if (remainder === 3) {\n            a += view.getUint8(index++) << 16;\n        }\n    }\n    return mix(a, b, c)[2];\n}\n// clang-format off\nfunction mix(a, b, c) {\n    a -= b;\n    a -= c;\n    a ^= c >>> 13;\n    b -= c;\n    b -= a;\n    b ^= a << 8;\n    c -= a;\n    c -= b;\n    c ^= b >>> 13;\n    a -= b;\n    a -= c;\n    a ^= c >>> 12;\n    b -= c;\n    b -= a;\n    b ^= a << 16;\n    c -= a;\n    c -= b;\n    c ^= b >>> 5;\n    a -= b;\n    a -= c;\n    a ^= c >>> 3;\n    b -= c;\n    b -= a;\n    b ^= a << 10;\n    c -= a;\n    c -= b;\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    const low = (a & 0xffff) + (b & 0xffff);\n    const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(a, b) {\n    const ah = a[0], al = a[1];\n    const bh = b[0], bl = b[1];\n    const result = add32to64(al, bl);\n    const carry = result[0];\n    const l = result[1];\n    const h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(num, count) {\n    const hi = num[0], lo = num[1];\n    const h = (hi << count) | (lo >>> (32 - count));\n    const l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction bytesToWords32(bytes, endian) {\n    const size = (bytes.length + 3) >>> 2;\n    const words32 = [];\n    for (let i = 0; i < size; i++) {\n        words32[i] = wordAt(bytes, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(bytes, index) {\n    return index >= bytes.length ? 0 : bytes[index];\n}\nfunction wordAt(bytes, index, endian) {\n    let word = 0;\n    if (endian === Endian.Big) {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * Create a shared exponentiation pool for base-256 computations. This shared pool provides memoized\n * power-of-256 results with memoized power-of-two computations for efficient multiplication.\n *\n * For our purposes, this can be safely stored as a global without memory concerns. The reason is\n * that we encode two words, so only need the 0th (for the low word) and 4th (for the high word)\n * exponent.\n */\nconst base256 = new BigIntExponentiation(256);\n/**\n * Represents two 32-bit words as a single decimal number. This requires a big integer storage\n * model as JS numbers are not accurate enough to represent the 64-bit number.\n *\n * Based on https://www.danvk.org/hex2dec.html\n */\nfunction wordsToDecimalString(hi, lo) {\n    // Encode the four bytes in lo in the lower digits of the decimal number.\n    // Note: the multiplication results in lo itself but represented by a big integer using its\n    // decimal digits.\n    const decimal = base256.toThePowerOf(0).multiplyBy(lo);\n    // Encode the four bytes in hi above the four lo bytes. lo is a maximum of (2^8)^4, which is why\n    // this multiplication factor is applied.\n    base256.toThePowerOf(4).multiplyByAndAddTo(hi, decimal);\n    return decimal.toString();\n}\n\n// This module specifier is intentionally a relative path to allow bundling the code directly\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n    const substitutions = {};\n    const substitutionLocations = {};\n    const associatedMessageIds = {};\n    const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n    const cleanedMessageParts = [metadata.text];\n    const placeholderNames = [];\n    let messageString = metadata.text;\n    for (let i = 1; i < messageParts.length; i++) {\n        const { messagePart, placeholderName = computePlaceholderName(i), associatedMessageId } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n        messageString += `{$${placeholderName}}${messagePart}`;\n        if (expressions !== undefined) {\n            substitutions[placeholderName] = expressions[i - 1];\n            substitutionLocations[placeholderName] = expressionLocations[i - 1];\n        }\n        placeholderNames.push(placeholderName);\n        if (associatedMessageId !== undefined) {\n            associatedMessageIds[placeholderName] = associatedMessageId;\n        }\n        cleanedMessageParts.push(messagePart);\n    }\n    const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n    const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter(id => id !== messageId) : [];\n    return {\n        id: messageId,\n        legacyIds,\n        substitutions,\n        substitutionLocations,\n        text: messageString,\n        customId: metadata.customId,\n        meaning: metadata.meaning || '',\n        description: metadata.description || '',\n        messageParts: cleanedMessageParts,\n        messagePartLocations,\n        placeholderNames,\n        associatedMessageIds,\n        location,\n    };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n    const { text: messageString, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { text: messageString };\n    }\n    else {\n        const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n        const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n        let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n        if (description === undefined) {\n            description = meaning;\n            meaning = undefined;\n        }\n        if (description === '') {\n            description = undefined;\n        }\n        return { text: messageString, meaning, description, customId, legacyIds };\n    }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMessageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n    const { text: messagePart, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { messagePart };\n    }\n    else {\n        const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n        return { messagePart, placeholderName, associatedMessageId };\n    }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n    if (raw.charAt(0) !== BLOCK_MARKER$1) {\n        return { text: cooked };\n    }\n    else {\n        const endOfBlock = findEndOfBlock(cooked, raw);\n        return {\n            block: cooked.substring(1, endOfBlock),\n            text: cooked.substring(endOfBlock + 1),\n        };\n    }\n}\nfunction computePlaceholderName(index) {\n    return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\nclass MissingTranslationError extends Error {\n    constructor(parsedMessage) {\n        super(`No translation found for ${describeMessage(parsedMessage)}.`);\n        this.parsedMessage = parsedMessage;\n        this.type = 'MissingTranslationError';\n    }\n}\nfunction isMissingTranslationError(e) {\n    return e.type === 'MissingTranslationError';\n}\n/**\n * Translate the text of the `$localize` tagged-string (i.e. `messageParts` and\n * `substitutions`) using the given `translations`.\n *\n * The tagged-string is parsed to extract its `messageId` which is used to find an appropriate\n * `ParsedTranslation`. If this doesn't match and there are legacy ids then try matching a\n * translation using those.\n *\n * If one is found then it is used to translate the message into a new set of `messageParts` and\n * `substitutions`.\n * The translation may reorder (or remove) substitutions as appropriate.\n *\n * If there is no translation with a matching message id then an error is thrown.\n * If a translation contains a placeholder that is not found in the message being translated then an\n * error is thrown.\n */\nfunction translate$1(translations, messageParts, substitutions) {\n    const message = parseMessage(messageParts, substitutions);\n    // Look up the translation using the messageId, and then the legacyId if available.\n    let translation = translations[message.id];\n    // If the messageId did not match a translation, try matching the legacy ids instead\n    if (message.legacyIds !== undefined) {\n        for (let i = 0; i < message.legacyIds.length && translation === undefined; i++) {\n            translation = translations[message.legacyIds[i]];\n        }\n    }\n    if (translation === undefined) {\n        throw new MissingTranslationError(message);\n    }\n    return [\n        translation.messageParts, translation.placeholderNames.map(placeholder => {\n            if (message.substitutions.hasOwnProperty(placeholder)) {\n                return message.substitutions[placeholder];\n            }\n            else {\n                throw new Error(`There is a placeholder name mismatch with the translation provided for the message ${describeMessage(message)}.\\n` +\n                    `The translation contains a placeholder with name ${placeholder}, which does not exist in the message.`);\n            }\n        })\n    ];\n}\n/**\n * Parse the `messageParts` and `placeholderNames` out of a target `message`.\n *\n * Used by `loadTranslations()` to convert target message strings into a structure that is more\n * appropriate for doing translation.\n *\n * @param message the message to be parsed.\n */\nfunction parseTranslation(messageString) {\n    const parts = messageString.split(/{\\$([^}]*)}/);\n    const messageParts = [parts[0]];\n    const placeholderNames = [];\n    for (let i = 1; i < parts.length - 1; i += 2) {\n        placeholderNames.push(parts[i]);\n        messageParts.push(`${parts[i + 1]}`);\n    }\n    const rawMessageParts = messageParts.map(part => part.charAt(0) === BLOCK_MARKER$1 ? '\\\\' + part : part);\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, rawMessageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create a `ParsedTranslation` from a set of `messageParts` and `placeholderNames`.\n *\n * @param messageParts The message parts to appear in the ParsedTranslation.\n * @param placeholderNames The names of the placeholders to intersperse between the `messageParts`.\n */\nfunction makeParsedTranslation(messageParts, placeholderNames = []) {\n    let messageString = messageParts[0];\n    for (let i = 0; i < placeholderNames.length; i++) {\n        messageString += `{$${placeholderNames[i]}}${messageParts[i + 1]}`;\n    }\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, messageParts),\n        placeholderNames\n    };\n}\n/**\n * Create the specialized array that is passed to tagged-string tag functions.\n *\n * @param cooked The message parts with their escape codes processed.\n * @param raw The message parts with their escaped codes as-is.\n */\nfunction makeTemplateObject(cooked, raw) {\n    Object.defineProperty(cooked, 'raw', { value: raw });\n    return cooked;\n}\nfunction describeMessage(message) {\n    const meaningString = message.meaning && ` - \"${message.meaning}\"`;\n    const legacy = message.legacyIds && message.legacyIds.length > 0 ?\n        ` [${message.legacyIds.map(l => `\"${l}\"`).join(', ')}]` :\n        '';\n    return `\"${message.id}\"${legacy} (\"${message.text}\"${meaningString})`;\n}\n\n/**\n * Load translations for use by `$localize`, if doing runtime translation.\n *\n * If the `$localize` tagged strings are not going to be replaced at compiled time, it is possible\n * to load a set of translations that will be applied to the `$localize` tagged strings at runtime,\n * in the browser.\n *\n * Loading a new translation will overwrite a previous translation if it has the same `MessageId`.\n *\n * Note that `$localize` messages are only processed once, when the tagged string is first\n * encountered, and does not provide dynamic language changing without refreshing the browser.\n * Loading new translations later in the application life-cycle will not change the translated text\n * of messages that have already been translated.\n *\n * The message IDs and translations are in the same format as that rendered to \"simple JSON\"\n * translation files when extracting messages. In particular, placeholders in messages are rendered\n * using the `{$PLACEHOLDER_NAME}` syntax. For example the message from the following template:\n *\n * ```html\n * <div i18n>pre<span>inner-pre<b>bold</b>inner-post</span>post</div>\n * ```\n *\n * would have the following form in the `translations` map:\n *\n * ```ts\n * {\n *   \"2932901491976224757\":\n *      \"pre{$START_TAG_SPAN}inner-pre{$START_BOLD_TEXT}bold{$CLOSE_BOLD_TEXT}inner-post{$CLOSE_TAG_SPAN}post\"\n * }\n * ```\n *\n * @param translations A map from message ID to translated message.\n *\n * These messages are processed and added to a lookup based on their `MessageId`.\n *\n * @see `clearTranslations()` for removing translations loaded using this function.\n * @see `$localize` for tagging messages as needing to be translated.\n * @publicApi\n */\nfunction loadTranslations(translations) {\n    // Ensure the translate function exists\n    if (!$localize.translate) {\n        $localize.translate = translate;\n    }\n    if (!$localize.TRANSLATIONS) {\n        $localize.TRANSLATIONS = {};\n    }\n    Object.keys(translations).forEach(key => {\n        $localize.TRANSLATIONS[key] = parseTranslation(translations[key]);\n    });\n}\n/**\n * Remove all translations for `$localize`, if doing runtime translation.\n *\n * All translations that had been loading into memory using `loadTranslations()` will be removed.\n *\n * @see `loadTranslations()` for loading translations at runtime.\n * @see `$localize` for tagging messages as needing to be translated.\n *\n * @publicApi\n */\nfunction clearTranslations() {\n    $localize.translate = undefined;\n    $localize.TRANSLATIONS = {};\n}\n/**\n * Translate the text of the given message, using the loaded translations.\n *\n * This function may reorder (or remove) substitutions as indicated in the matching translation.\n */\nfunction translate(messageParts, substitutions) {\n    try {\n        return translate$1($localize.TRANSLATIONS, messageParts, substitutions);\n    }\n    catch (e) {\n        console.warn(e.message);\n        return [messageParts, substitutions];\n    }\n}\n\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case. Note: Typeof/Instanceof\n// checks are considered side-effects in Terser. We explicitly mark this as side-effect free:\n// https://github.com/terser/terser/issues/250.\nconst _global = ( /* @__PURE__ */(() => (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof global !== 'undefined' && global) || (typeof window !== 'undefined' && window) ||\n    (typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self))());\n\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize$1 = function (messageParts, ...expressions) {\n    if ($localize$1.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize$1.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n\n// This file exports all the `utils` as private exports so that other parts of `@angular/localize`\n\n// This file contains the public API of the `@angular/localize` entry-point\n\n// DO NOT ADD public exports to this file.\n\nexport { clearTranslations, loadTranslations, $localize$1 as ɵ$localize, MissingTranslationError as ɵMissingTranslationError, _global as ɵ_global, computeMsgId as ɵcomputeMsgId, findEndOfBlock as ɵfindEndOfBlock, isMissingTranslationError as ɵisMissingTranslationError, makeParsedTranslation as ɵmakeParsedTranslation, makeTemplateObject as ɵmakeTemplateObject, parseMessage as ɵparseMessage, parseMetadata as ɵparseMetadata, parseTranslation as ɵparseTranslation, splitBlock as ɵsplitBlock, translate$1 as ɵtranslate };\n","/**\n * @license Angular v15.1.3\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵ_global, ɵ$localize } from '@angular/localize';\nexport { ɵ$localize as $localize } from '@angular/localize';\n\n// Attach $localize to the global context, as a side-effect of this module.\nɵ_global.$localize = ɵ$localize;\n","'use strict';\n/**\n * @license Angular v14.2.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"x_google_ignoreList":[0,1,2]}